{
  "Exports": {
    "*Bus.End": "(*Bus) End()",
    "*Bus.Error": "(*Bus) Error(error)",
    "*Bus.Plug": "(*Bus) Plug(github.com/gopherjs/gopherjs/js.Object)",
    "*Bus.Push": "(*Bus) Push(github.com/gopherjs/gopherjs/js.Object)",
    "*EventStream.OnValue": "(*EventStream) OnValue((github.com/gopherjs/gopherjs/js.Object) github.com/gopherjs/gopherjs/js.Object) ()",
    "*EventStream.Subscribe": "(*EventStream) Subscribe((github.com/gopherjs/gopherjs/js.Object) github.com/gopherjs/gopherjs/js.Object) ()",
    "Bacon": "js.Global.Get(\"Bacon\")",
    "Bus": "type Bus struct {Object github.com/gopherjs/gopherjs/js.Object}",
    "EventStream": "type EventStream struct {Object github.com/gopherjs/gopherjs/js.Object}",
    "NewBus": "func () *Bus",
    "init": "c2714c3074d029ccb7ada588a9bfe633"
  },
  "Imports": {
    "github.com/gopherjs/gopherjs/js.Global": "Object",
    "github.com/gopherjs/gopherjs/js.Object": "type Object interface {Bool() bool; Call(string,...interface{}) Object; Delete(string); Float() float64; Get(string) Object; Index(int) Object; Int() int; Int64() int64; Interface() interface{}; Invoke(...interface{}) Object; IsNull() bool; IsUndefined() bool; Length() int; New(...interface{}) Object; Set(string,interface{}); SetIndex(int,interface{}); Str() string; Uint64() uint64; Unsafe() uintptr}",
    "github.com/gopherjs/gopherjs/js.init": "6a229b30190531ea97c521e677fc98c9"
  },
  "Path": "github.com/go-on/bacon"
}
